Java - programming language and a platform.
java is a high level language with the following characterist:
       It is simple
       object oriented
       distributed
       interpreted
       Robust
       Secure
       Architecture-neutral
       portable
       high performince
       multithreaded
       Dynamic
       
-Java program is both compiled and interpreted.
-With compiling, you transilate the java program into intermediate language called bytecodes.
-the bytecode is interpreted by the java interpretor.
N/b compilation occurs once while interpretation occur each time the program is executed.
-We can also say java bytecodes is a machine code instruction for java virtual machine.
-java program can be compiled into bytecode on any platform that has java compiler.
-Java platform has two components, and this are :
     -JM(The java virtual machine)
     -Java API (the java application programming interface.
-Java API is a large collection fo ready-made software components that provides useful capabilities such as:
       Graphical user interface(GUI) widgets
-Java API is grouped into  libraries(packages) of related components.
-Java is platform independent
-It is slow than the native code.
-Java applet is a java program that adheres to certain convention that allow it to run within a java enabled browser.
-server serves and supports clients on a network. Examples are:
      Web server
      proxy server.
      mail server.
      printer server.
      boot server.
      
-servlets are similar to applet in that they  are runtime extensions of applications .
-they run within the java server, configuring or tailoring the server.
-The core API is the API included in every full implementation  of the java platform.
-It gives the following features:
                 The essentials:objects, strings, threads, numbers, inputs, and outputs, data structures, system properties, data and time.
                 Applets: the sets of conventions used by java applets
                 networking is the tcp and UDP sockets and IP addresses.
                 internationalizations, helps in localising for users widewide.
                 security - both low level and high level including the electronic signature.
                 Software components - 
                 object serialization - allows lightweight persistence and communication via Remote method invocation(RMI)
                 java Database connectivity(JDBC) - provides uniform access to a wide range of relational databases.
-JVM and Java API insulates the java program from hardware dependancies.
-Why java  - Quick to start 
           - Less  code
           -better codes - ie encourages garbage collections that help avoid memory leaks.
           -program faster.
           
-Practical exercise:
       -Java file should have exact name as the class name.
       -compiling the the java source file, you exacute;
                javac filename.java
       -After successful compilation, a file name filename.class is create in the same directory. This class file contains the java bytecode-platform-independt codes
       interpreted by the java interpreter.
       -To run the application type:
            java filename.java
       -Your output will be displayed in the window where you invoked the interpreter.
       -Java methods(function-block of code) and variables should exist within a class.
       -The entry point of java application is the main method.
       -When you run application with class name, the interpreter invoke the main method in that class.
       -The main method control the flow of the program.
       -components of the java application are: objects, class, methods and java statements.
       
       
       Comments in java
       --------------------
       -/* text */ 
       -/** documentation */
       -//text
       
       Defining a class
       ---------------------
       -Is the besic building block of an object-oriented language.
       -It the blueprint  that describe the state and behavior associated with instances of that class.
       -Instanciating a class means that you create an object that has the same state and behaviors as other instances of he same  class.
       -state associated with  a class or object is stored in member variables.
       -The behavior  associated with a class or object is implemented with method.
       -Every java application must contain the main method:
               public static void main(String[] args){
                  //body of main method
                 }
      -The main method starts with three modifers
           -public - allows any class to call the main method
           -static - means that the main method is a class method
           -void - indicate that the main method does not return any value.
      -On invoking the java interpreter,you start by calling the class  main method, that will call other methods that will be required to run the application.
      -
      
      Arguments to the main method
      -------------------------------
      -While declaring the main method, you can pass arguments: an array of string for example:
            public static void main(String[] args)
      -This array is the mechanism through which the java VM passes information to your application.
      -Each string in the array is called a command-line argument.
        
        
       Using Classes and Objects
       --------------------------------
       -System class provides system independent access to system dependent functionality.
       -One feature provided by the system class is the standard output stream- a place to send text that usually  refers to the terminal  window in which you invoke 
       the java interpreter.
       -Standard output stream is used during the development cycle.
       
       Using a class variable
       ----------------------------
       Example:
           System.out.println("AM learning java")
       -The construct System.out is the full name of the out variable in the system class.
       -The application never instantiates the system class. Instead, it refers to out directly through the class.
       -This is because out  is a class variable -a variable  associated with a class rather than with an object.
       -The java allocates a class variable once per class , no matter how many instances of that class exist.
       -Class method implement class-specific bahavior.
       
       
       Applet
       ------
       -It facilitates the java program to be included in HTML pages and executed in java enabled browser.
       -To compile and run applet, you vsn use tools from the JDK
       -JDK compiler allows you to compile any kind of java program.
       -JDK applet viewer lets you run java applet.
       
       Creating java source file
       --------------------------
       -Create a file called LetUsAllLearnJava.java
         import java.applet.Applet;
         import java.awt.Graphics;
         public class LetUsAllLearnJava extends Applet{
           public void pain(Graphics g){
           g.drawString("Dudes i fkoech tell you to learn java" 30, 20);
           }
          }
      
           
           Creating an HTML File that includes the Applet
           ----------------------------------------------------
    -Create a filename.html in the same director of otherfilename.class.
    -HTML file should contains:
        <html>
        <head>
        <title>title name</title>
        </head>
        <body>
        <Applet Code="filename.class" Width 140px height=20>
        </Applet>
        </body>
        </html>
            
-Java applet is a program that adheres to a set of conventiond that allow it 
to run within a java-enabled browser.
-procedure to write a applet program.
  1) you import classes or packages.
  import java.applet.Applet;
  import java.awt.Graphics;
-A class can easily refer to classes in other packages.
-Packages are used to group classes.
-similar to the way libraries group c functions.
-Every applet must define a subclass of he applet class.
-Applet inherit a great deal of functionality from the applet class, ranging  from he  sbility
 the ability to communicate with the borwser to the ability to present a 
Graphical user Interface(GUI).
-Applet implements just one method: paint: every applet must implement at least one of the following methods:
 init, start, or paint.
-Ulike the java applivation, java applet do not need to implement a main method.
-Applet are designed to be included  in HTML page.
-Using the <APPLET> HTML tag, you specify(at a minimum) the location of the applet subclass and the dimension of the applet's on screen display area.
-When a java-enabled browser  encounters an <applet> tag, it reserver on screen space for the applet,
 loads the applet subclass onto the computer on which  it is executing and creates an instance odf the applet subclass

Importing classes and packages
----------------------------------
-The java.applet. and java.awt prefixes tell the compiler which packages it should search for the applet and Graphic class.
-the Java.applet packages contains classes that are essential to java applet.
-The java.awt package contains classes used by all java program with a GUI
-The java.awt package contain classes used by all java programs with a GUI
-To import  entire package: 
           import java.applet.*;
           import java.awt.*;
-In the java language, every class is in a package.
-If the source code for a class doesn't have a package statement at the 
 top declaring in which package the class is, then the class is in the default package.
 -Without a package, all classes can refer to each other without prefixes ie
  java.awt component  class refers to the java.awt graphics class without  any prefixes  and without importing the graphics class.
  
  
  Defining an applet subclass
  ---------------------------------
  import java.applet.APPLET;
  import java.awt.Graphics;
  public class Amlearning extend Applet{
   public void paint(Graphics g){
     g.drawString("Learning java is cool!" , 100, 40);
     }
  }
 -The extends keyword indicates that Amlearning is a subclass of the class whose name follows: Applet.
 -From Applet class, applet inherit a great deals of functionality. Perhaps most important is the ability to respond to browser request.
 
 
 Implementing Applet Methods
 ---------------------------------
 -Every applet implements one or more of the init, start, and paint methods.
 -the graphics object passesed into the paint method represents the  applet's  on-screen drawing on-screen
 -the applet draws the string "learning java is cool" starting at location (100, 40)
 -<APPLET CODE = "SimpleInterest.class" WIDTH= 120 HEIGHT=30>
 -The applet tag species that the browser should load the class whose compiled code(bytecode) is in the file named SimpleInterest.class.
 -If you include an applet twice in one HTML page, the browser loads the class file once and creates two instance of the class.
 -the width and height attributes are like the attributes of the same name in an <IMG> tag:
 -They specifies the size in pixels of he applet's display area.
 
 Object oriented programming concepts
 ---------------------------------------
 -real world object shar two characteristics: they have state and behavior.
 -For example dog  have state(name, color, breed, condition of being angry) and have behavior(barking, fetching , slobbering)
 -A software objects mains its state in variables and implements its behavior with methods.
 -An object is a software bundled of variables and related methods.
 -Everything that the ssoftware object knows (its state) and can do (its behavior) is expressed by the variable and method within that object.
 -object interact with anothe object through the public interface.
 -object can change its private information without affecting another objects as 
   long as the syntax and semantics  of the object's public interface remains the same.
 -Java objects can specify exact which other object have access based on inheritance and ,package relationship.
 -hiding information within an object's nucleus and then providing  a  public interface for interaction with it is called encapsulations.
 
 
 Benefits of objects
 -------------------
 -encapsulating related variables and methods into  a neat software bundle is a simple yet powerful idea that provides  two major 
 benefits to software developer.
 -Modularity - the source code for an object can be written and maintained independently from the source code for other objects.
 -An object can be easily passed around in the system.
 -information hiding -  an object has a public interface that other objects can use to communicate with it.
  However, the object can maintain private information and methods that can be changed at any time  without affecting the other objects that depend on it.
  
  
  
  What is message
  ----------------------
-A single object alone is generally not very useful and usually appear as a commponent of a large  program or application contains many other objects.
-Through the interaction of this objects , programmers achieve  higher-order functionality and more complex behavior.
-software objects interact and communicate with each other by sending messages to each other.
-information is passed  along with the message  as a parameter to a method.
-Three components that comprise a message.
  1)The object to whom the message is addressed(bicycle)
  2)the name of the method to perform (Change Gears)
  3)Any parameter needed(lowegear)
  
  Benefit of messages
  ---------------------
-
